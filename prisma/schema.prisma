// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int         @id @default(autoincrement())
  name       String
  address    String
  isArchived Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  users      Users[]
  Locations  Locations[]
}

model Users {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String?
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id])
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model AddonCategories {
  id                   Int                    @id @default(autoincrement())
  name                 String
  isRequired           Boolean                @default(true)
  isArchived           Boolean                @default(false)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  addons               Addons[]
  MenusAddonCategories MenusAddonCategories[]
}

model Addons {
  id              Int             @id @default(autoincrement())
  name            String
  price           Int
  addonCategoryId Int
  addonCategories AddonCategories @relation(fields: [addonCategoryId], references: [id])
  isArchived      Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model Locations {
  id                           Int                            @id @default(autoincrement())
  name                         String
  address                      String
  companyId                    Int
  company                      Company                        @relation(fields: [companyId], references: [id])
  isArchived                   Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  ManusMenuCategoriesLocations MenusMenuCategoriesLocations[]
  Tables                       Tables[]
}

model MenuCategories {
  id                           Int                            @id @default(autoincrement())
  name                         String
  isArchived                   Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  ManusMenuCategoriesLocations MenusMenuCategoriesLocations[]
}

model Menus {
  id                           Int                            @id @default(autoincrement())
  name                         String
  price                        Int
  description                  String
  assetUrl                     String
  isArchived                   Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  MenusAddonCategories         MenusAddonCategories[]
  ManusMenuCategoriesLocations MenusMenuCategoriesLocations[]
}

model MenusAddonCategories {
  id              Int             @id @default(autoincrement())
  menuId          Int
  menus           Menus           @relation(fields: [menuId], references: [id])
  addonCategoryId Int
  addonCategories AddonCategories @relation(fields: [addonCategoryId], references: [id])
  isArchived      Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model MenusMenuCategoriesLocations {
  id             Int            @id @default(autoincrement())
  menuId         Int?
  menus          Menus?         @relation(fields: [menuId], references: [id])
  menuCategoryId Int
  menuCategories MenuCategories @relation(fields: [menuCategoryId], references: [id])
  locationId     Int?
  locations      Locations?     @relation(fields: [locationId], references: [id])
  isArchived     Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Tables {
  id         Int       @id @default(autoincrement())
  name       String
  locationId Int
  assetUrl   String
  locations  Locations @relation(fields: [locationId], references: [id])
  isArchived Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
